# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot = {
    loader = {
      systemd-boot.enable = true;
      efi.canTouchEfiVariables = true;
    };
    initrd = {
      availableKernelModules = [ "nvme" "xhci_pci" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
      luks.devices.cryptpart = {
        device = "/dev/disk/by-uuid/9eb880ac-8a42-4d3b-bce8-745654b25214";
        preLVM = true;
      };
    };
    kernelModules = [ "kvm-amd" ];
    # kernelParams = [ "amdgpu.dcdebugmask=0x600" ];
    kernelPackages = pkgs.linuxPackages_6_10;
    # Enable nested virtualization
    extraModprobeConfig = "options kvm-amd nested=1";
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/a7de3341-3908-4def-b15d-5e7f95747a3f";
      fsType = "btrfs";
      options = [ "subvol=root" "noatime" "compress=zstd:3" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/a7de3341-3908-4def-b15d-5e7f95747a3f";
      fsType = "btrfs";
      options = [ "subvol=home"  "noatime" "compress=zstd:3" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/a7de3341-3908-4def-b15d-5e7f95747a3f";
      fsType = "btrfs";
      options = [ "subvol=nix" "noatime" "compress=zstd:3"  ];
    };

  fileSystems."/snapshots" =
    { device = "/dev/disk/by-uuid/a7de3341-3908-4def-b15d-5e7f95747a3f";
      fsType = "btrfs";
      options = [ "subvol=snapshots" "noatime" "compress=zstd:3"  ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/2A15-DA26";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware = {
    cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
    graphics = {
      enable = true;
      enable32Bit = true;
    };
  };
}

